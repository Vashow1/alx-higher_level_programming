This is the doctests for the module 2-matrix_divided.py
Which contains a function that divides all elements of a matrix by a single divisor


Testing if it works with normal input

:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> ex = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(ex, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Check if original matrix is left unchanged

:

>>> print(ex)
[[1, 2, 3], [4, 5, 6]]

It should be opined that the result is rounded off to two decimal pts

Works if list is made up of floats

:

>>> ex = [[1.2, -2.4, 3.6], [-6.6, 7.2, 8.1]]
>>> print(matrix_divided(ex, 3))
[[0.4, -0.8, 1.2], [-2.2, 2.4, 2.7]]

Testing to see if it raises error if it is parsed
a list that is not of ints or float or if it is not populated

:

>>> ex = [['h', 2, 3], [4, 5, 6]]
>>> print(matrix_divided(ex, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> ex = [[1, 2, 3], ["srt", 5, 6]]
>>> print(matrix_divided(ex, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> ex = None
>>> print(matrix_divided(ex, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> ex = []
>>> print(matrix_divided(ex, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Though an empty list of lists will pass
since its len is >0

>>> ex = [[]]
>>> print(matrix_divided(ex, 3))
[[]]

Check if the matrix is made up of lists

:

>>> ex = [1, 2, 3]
>>> print(matrix_divided(ex, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Confirming that each row of the matrix must be
of the same size

:

>>> ex = [[1, 2, 3], [5, 6]]
>>> print(matrix_divided(ex, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> ex = [[2, 3], [4, 5, 6]]
>>> print(matrix_divided(ex, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Testing that div must be a number (int or float)

:

>>> ex = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(ex, 'h'))
Traceback (most recent call last):
TypeError: div must be a number

Checking that div cannot be equal to 0

:

>>> ex = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(ex, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero


Testing if it still works with a matrix of length other than 2

:

>>> ex = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> print(matrix_divided(ex, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]


>>> ex = [[1], [2], [3]]
>>> print(matrix_divided(ex, 3.0))
[[0.33], [0.67], [1.0]]

