This is the doctest for the class and function print_sorted


Setting up

:

>>> MyList = __import__('1-my_list').MyList

Preliminary test to see if it works

:

>>> ex = MyList()
>>> print(ex)
[]

Note that it inherits from the class list hence the __str__

Checking normal workings of the object

:

>>> ex = MyList([1, 0, 3, 4])
>>> print(ex)
[1, 0, 3, 4]

checking normal methods of list works on it

:

>>> ex.append(2)
>>> ex.append(3)
>>> print(ex)
[1, 0, 3, 4, 2, 3]
>>> ex.pop()
3
>>> print(ex)
[1, 0, 3, 4, 2]
>>> ex.remove(0)
>>> print(ex)
[1, 3, 4, 2]


Checking if print_sorted works as intended 

:

>>> ex.print_sorted
<bound method MyList.print_sorted of [1, 3, 4, 2]>

>>> ex.print_sorted()
[1, 2, 3, 4]


Checking if other qualities of list works as intended

:

>>> ex[0] = 0
>>> print(ex)
[0, 3, 4, 2]

Checking errrors now:

:

>>> ex2 = MyList(None)
Traceback (most recent call last):
TypeError: 'NoneType' object is not iterable

>>> ex2 = MyList([47, 98], [34, 45])
Traceback (most recent call last):
TypeError: list expected at most 1 argument, got 2

>>> print(ex)
[0, 3, 4, 2]
